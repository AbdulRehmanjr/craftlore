generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model AppliedJob {
    jobId       String @id @default(uuid())
    fullName    String @default("none")
    email       String @default("none")
    job         String @default("none")
    jobCode     String @default("none")
    resume      String @default("none")
    coverLetter String @default("none")
}

model Employ {
    employId     String @id @default(uuid())
    fullName     String @default("none")
    skills       String @default("none")
    contribution String @default("none")
}

model User {
    userId       String       @id @default(uuid())
    fullName     String       @default("none")
    phone        String       @default("none")
    email        String
    address      String       @default("none")
    password     String       @default("none")
    registerType RegisterType @default(None)
    status       Status       @default(Pending)
    Artisan      Artisan[]
    Business     Business[]
    Institute    Institute[]

    @@unique([email])
    @@index([email])
}

enum Status {
    Pending
    Actice
}

model Artisan {
    artisanId       String          @id @default(uuid())
    craftSpecialty  String          @default("none")
    craftSkill      SkillLevel      @default(None)
    craftExperience Int             @default(0)
    craftAward      String          @default("none")
    market          MarketType      @default(None)
    documents       String[]        @default([])
    userId          String
    listingCriteria String
    criteria        LisitingCritera @relation(fields: [listingCriteria], references: [criteraId])
    user            User            @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
}

model Business {
    businessId       String        @id @default(uuid())
    businessName     String        @default("none")
    businessEmail    String
    businessAddress  String        @default("none")
    businessType     BusinessLevel @default(None)
    businessSold     String        @default("none")
    businessEmployee Int           @default(0)
    documents        String[]      @default([])
    userId           String
    user             User          @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade)

    @@unique([businessEmail])
    @@index([businessEmail])
}

model Institute {
    instituteId      String          @id @default(uuid())
    instituteName    String          @default("none")
    instituteEmail   String
    instituteType    InstitutionType @default(None)
    instituteAddress String          @default("none")
    instituteMission String          @default("none")
    instituteRep     String          @default("none")
    repDes           String          @default("none")
    documents        String[]        @default([])
    userId           String
    user             User            @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade)

    @@unique([instituteEmail])
    @@index([instituteEmail])
}

model BusinessMembership {
    businessId          String   @id @default(uuid())
    buyerType           String   @default("none")
    businessName        String   @default("none")
    businessType        String   @default("none")
    taxId               String   @default("none")
    country             String   @default("none")
    website             String   @default("none")
    productInterest     String[] @default([])
    orderVolume         String   @default("none")
    authentication      String   @default("none")
    traceability        String   @default("none")
    sustainability      String[] @default([])
    source              String   @default("none")
    newsletter          Boolean  @default(false)
    specialRequirements String   @default("none")
    terms               Boolean  @default(false)
}

model LisitingCritera {
    criteraId                 String    @id @default(uuid())
    sourceOfMaterial          String    @default("none")
    craftingProcess           String    @default("none")
    sustainablePractices      Boolean   @default(false)
    sustainabledescription    String    @default("none")
    fairWage                  Boolean   @default(false)
    genderSuport              Boolean   @default(false)
    womenPercentage           Int       @default(0)
    workplaceuphold           Boolean   @default(false)
    workplaceDescription      String    @default("none")
    childLabour               Boolean   @default(false)
    fairTrade                 Boolean   @default(false)
    fairtradeDoc              String[]  @default([])
    giHold                    Boolean   @default(false)
    giNumber                  String    @default("none")
    blockChain                Boolean   @default(false)
    blockChainDoc             String[]  @default([])
    ethics                    Boolean   @default(false)
    qualityReview             Boolean   @default(false)
    profilePermission         Boolean   @default(false)
    complianceAcknowledgement Boolean   @default(false)
    Artisan                   Artisan[]
}

enum InstitutionType {
    None
    Governance
    NGO
    Training_Body
    Educational_Body
}

enum BusinessLevel {
    None
    Large_Enterprice
    Mid_sized_Business
    Small_Business
    Startup
}

enum SkillLevel {
    None
    Master
    Skilled
    Semi_Skilled
    Apprentice
}

enum RegisterType {
    None
    Artisan
    Business
    Institution
}

enum MarketType {
    None
    Local
    National
    International
}
