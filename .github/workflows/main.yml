name: Deployment on the server
on:
  push:
    branches:
      - master

jobs:      
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH key for deployment
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          eval `ssh-agent -s`
          ssh-add ~/.ssh/id_ed25519
          ssh-keyscan -t ed25519 69.48.206.67 >> ~/.ssh/known_hosts
          
      - name: Deploy to server
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          CLOUD_NAME: ${{ secrets.CLOUD_NAME }}
          CLOUD_KEY: ${{ secrets.CLOUD_KEY }}
          CLOUD_SECERT: ${{ secrets.CLOUD_SECERT }}
          NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME: ${{ secrets.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        run: |
          ssh deployerdev@69.48.206.67 '
            set -e
            export NVM_DIR="/home/deployerdev/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            
            cd /home/deployerdev/coding/projects/craftlore/craftlore-instance-1
            
            # Update code
            git pull origin master
            
            # Export environment variables
            export DATABASE_URL='"'$DATABASE_URL'"'
            export CLOUD_NAME='"'$CLOUD_NAME'"'
            export CLOUD_KEY='"'$CLOUD_KEY'"'
            export CLOUD_SECERT='"'$CLOUD_SECERT'"'
            export NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME='"'$NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME'"'
            export NEXTAUTH_SECRET='"'$NEXTAUTH_SECRET'"'
            export NEXTAUTH_URL='"'$NEXTAUTH_URL'"'
            
            # Install dependencies
            echo "Installing dependencies..."
            npm ci || exit 1
            
            # Install PM2 if not already installed
            if ! command -v pm2 &> /dev/null; then
              echo "Installing PM2..."
              npm install -g pm2
            fi
            
            # Build application
            echo "Building application..."
            npm run build || exit 1
            
            # Restart PM2 process
            echo "Restarting PM2 process..."
            pm2 describe craftlore-instance-1 > /dev/null
            if [ $? -eq 0 ]; then
              pm2 restart craftlore-instance-1 || exit 1
            else
              pm2 start npm --name craftlore-instance-1 -- start || exit 1
            fi
            
            # Save PM2 process list
            echo "Saving PM2 process list..."
            pm2 save || exit 1
            
            echo "Deployment completed successfully!"
          '
